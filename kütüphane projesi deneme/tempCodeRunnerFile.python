import tkinter as tk
import random

class HangmanGame:
    def __init__(self, root):
        self.root = root
        self.root.title("Adam Asmaca")
        self.root.geometry("400x400")

        self.word_list = ["PYTHON", "COMPUTER", "HANGMAN", "PROGRAMMING", "INTERFACE", "DEVELOPER", "PYTHONIC"]
        self.secret_word = random.choice(self.word_list)

        self.guesses = tk.StringVar()
        self.guesses.set("")

        self.chances = 7

        self.secret_word_label = tk.Label(root, text="Secret Word: " + " ".join(["_" for _ in self.secret_word]), font=("Helvetica", 18))
        self.secret_word_label.pack(pady=10)

        self.guess_label = tk.Label(root, text="Guess a letter:", font=("Helvetica", 14))
        self.guess_label.pack(pady=5)

        self.guess_entry = tk.Entry(root, font=("Helvetica", 14))
        self.guess_entry.pack(pady=5)

        self.guess_btn = tk.Button(root, text="Guess", command=self.check_guess)
        self.guess_btn.pack(pady=5)

        self.guesses_label = tk.Label(root, textvariable=self.guesses, font=("Helvetica", 14))
        self.guesses_label.pack(pady=5)

        self.message_label = tk.Label(root, text="", font=("Helvetica", 14))
        self.message_label.pack(pady=5)

    def check_guess(self):
        guess = self.guess_entry.get().upper()
        self.guess_entry.delete(0, tk.END)

        if len(guess) != 1 or not guess.isalpha():
            self.message_label.config(text="Invalid guess. Please enter a single letter.")
            return

        if guess in self.secret_word:
            revealed_word = ""
            for letter in self.secret_word:
                if letter == guess:
                    revealed_word += letter + " "
                else:
                    revealed_word += "_ "
            self.secret_word_label.config(text="Secret Word: " + revealed_word)

            if "_" not in revealed_word:
                self.message_label.config(text="Congratulations! You guessed the word.")
                self.guess_btn.config(state="disabled")
        else:
            self.chances -= 1
            self.guesses.set("Chances left: " + str(self.chances))
            if self.chances == 0:
                self.message_label.config(text="Game over. The word was: " + self.secret_word)
                self.guess_btn.config(state="disabled")

root = tk.Tk()
game = HangmanGame(root)
root.mainloop()